# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1btEpYu-LX1bTov7knFi22lzURClMW_5k
"""

import numpy as np
import matplotlib.pyplot as plt

# X qiymatlari
x = np.linspace(0, 10, 100)
# Y qiymatlari
y = np.sin(x)

# Grafikni chizish
plt.plot(x, y, label="Sinus(x)", color="blue")

# Grafikning nomi va o'qlari
plt.title("Sinus Funktsiyasining Grafiki")
plt.xlabel("X qiymatlari")
plt.ylabel("Y qiymatlari")

# To'rlarni qo'shish
plt.grid(True)

# Legenda qo'shish
plt.legend()

# Grafikni ko'rsatish
plt.show()

import matplotlib.pyplot as plt
import numpy as np

np.random.seed(42)
x = np.random.uniform(0, 10, 50)
y = np.random.uniform(0, 10, 50)

plt.figure(figsize=(8, 6))
plt.scatter(x, y, color='blue', label='Nuqtalar')

plt.title('Tasodifiy Nuqtalar Scatter Grafiki', fontsize=14)
plt.xlabel('X qiymatlari', fontsize=12)
plt.ylabel('Y qiymatlari', fontsize=12)
plt.legend()
plt.grid(True)
plt.show()

from google.colab.patches import cv2_imshow
import cv2
rasm=cv2.imread('CAR.jfif')
cv2_imshow(rasm)

oqqora=cv2.cvtColor(rasm,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora)

from google.colab.patches import cv2_imshow
import cv2
rasm=cv2.imread('CAR1.jfif')
cv2_imshow(rasm)

oqqora=cv2.cvtColor(rasm,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora)

from google.colab.patches import cv2_imshow
import cv2
rasm=cv2.imread('CAR2.jfif')
cv2_imshow(rasm)

oqqora=cv2.cvtColor(rasm,cv2.COLOR_BGR2GRAY)
cv2_imshow(oqqora)

import pandas as pd

# Read the CSV file
file_path = "/content/WHO COVID-19 cases.csv"  # Replace with the actual file path
data = pd.read_csv(file_path)

# Apply filters: Continent = 'Europe' and Cases > 1000
filtered_data = data[(data['Continent'] == 'Africa') ]  # Adjust column names if needed

# Display the first few rows of the filtered data
print("Filtered data (Europe, Cases > 0):")
print(filtered_data.head())

# Count the number of rows in the filtered data
row_count = len(filtered_data)
print(f"\nNumber of rows in filtered data: {row_count}")

# Save the filtered data to a new CSV file
filtered_data.to_csv("filtered_data.csv", index=False)
print("\nFiltered data saved to 'filtered_data.csv'.")

# Save the count to a separate file
with open("filtered_data_count.txt", "w") as count_file:
    count_file.write(f"Number of rows in filtered data: {row_count}\n")
print("Filtered data count saved to 'filtered_data_count.txt'.")